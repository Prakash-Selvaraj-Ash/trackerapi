// <auto-generated />
using System;
using BusTrackerApi.DbConnector;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BusTrackerApi.Migrations
{
    [DbContext(typeof(BusTrackContext))]
    partial class BusTrackContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BusTrackerApi.Domains.Bus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusTrackerApi.Domains.BusTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BusId");

                    b.Property<double>("CurrentLattitude");

                    b.Property<double>("CurrentLongitude");

                    b.Property<Guid>("LastDestinationId");

                    b.Property<Guid>("RouteId");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("LastDestinationId");

                    b.HasIndex("RouteId");

                    b.ToTable("BusTrackers");
                });

            modelBuilder.Entity("BusTrackerApi.Domains.LiveTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BusId");

                    b.Property<string>("ConnectionId");

                    b.Property<string>("DeviceFCMId");

                    b.Property<Guid>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("StudentId");

                    b.ToTable("LiveTrackers");
                });

            modelBuilder.Entity("BusTrackerApi.Domains.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Lattitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("BusTrackerApi.Domains.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DestinationId");

                    b.Property<Guid>("SourceId");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("SourceId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("BusTrackerApi.Domains.RouteAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("PlaceId");

                    b.Property<Guid>("RouteId");

                    b.Property<int>("SequenceNumber");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteAssociations");
                });

            modelBuilder.Entity("BusTrackerApi.Domains.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FcmId");

                    b.Property<string>("Name");

                    b.Property<Guid>("PlaceId");

                    b.Property<Guid>("RouteId");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("RouteId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("BusTrackerApi.Domains.BusTracker", b =>
                {
                    b.HasOne("BusTrackerApi.Domains.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusTrackerApi.Domains.Place", "LastDestination")
                        .WithMany()
                        .HasForeignKey("LastDestinationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusTrackerApi.Domains.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusTrackerApi.Domains.LiveTracker", b =>
                {
                    b.HasOne("BusTrackerApi.Domains.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusTrackerApi.Domains.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusTrackerApi.Domains.Route", b =>
                {
                    b.HasOne("BusTrackerApi.Domains.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusTrackerApi.Domains.Place", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusTrackerApi.Domains.RouteAssociation", b =>
                {
                    b.HasOne("BusTrackerApi.Domains.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusTrackerApi.Domains.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusTrackerApi.Domains.Student", b =>
                {
                    b.HasOne("BusTrackerApi.Domains.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusTrackerApi.Domains.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
